{"ast":null,"code":"var makeMiddleware = require('./lib/make-middleware');\nvar diskStorage = require('./storage/disk');\nvar memoryStorage = require('./storage/memory');\nvar MulterError = require('./lib/multer-error');\nfunction allowAll(req, file, cb) {\n  cb(null, true);\n}\nfunction Multer(options) {\n  if (options.storage) {\n    this.storage = options.storage;\n  } else if (options.dest) {\n    this.storage = diskStorage({\n      destination: options.dest\n    });\n  } else {\n    this.storage = memoryStorage();\n  }\n  this.limits = options.limits;\n  this.preservePath = options.preservePath;\n  this.fileFilter = options.fileFilter || allowAll;\n}\nMulter.prototype._makeMiddleware = function (fields, fileStrategy) {\n  function setup() {\n    var fileFilter = this.fileFilter;\n    var filesLeft = Object.create(null);\n    fields.forEach(function (field) {\n      if (typeof field.maxCount === 'number') {\n        filesLeft[field.name] = field.maxCount;\n      } else {\n        filesLeft[field.name] = Infinity;\n      }\n    });\n    function wrappedFileFilter(req, file, cb) {\n      if ((filesLeft[file.fieldname] || 0) <= 0) {\n        return cb(new MulterError('LIMIT_UNEXPECTED_FILE', file.fieldname));\n      }\n      filesLeft[file.fieldname] -= 1;\n      fileFilter(req, file, cb);\n    }\n    return {\n      limits: this.limits,\n      preservePath: this.preservePath,\n      storage: this.storage,\n      fileFilter: wrappedFileFilter,\n      fileStrategy: fileStrategy\n    };\n  }\n  return makeMiddleware(setup.bind(this));\n};\nMulter.prototype.single = function (name) {\n  return this._makeMiddleware([{\n    name: name,\n    maxCount: 1\n  }], 'VALUE');\n};\nMulter.prototype.array = function (name, maxCount) {\n  return this._makeMiddleware([{\n    name: name,\n    maxCount: maxCount\n  }], 'ARRAY');\n};\nMulter.prototype.fields = function (fields) {\n  return this._makeMiddleware(fields, 'OBJECT');\n};\nMulter.prototype.none = function () {\n  return this._makeMiddleware([], 'NONE');\n};\nMulter.prototype.any = function () {\n  function setup() {\n    return {\n      limits: this.limits,\n      preservePath: this.preservePath,\n      storage: this.storage,\n      fileFilter: this.fileFilter,\n      fileStrategy: 'ARRAY'\n    };\n  }\n  return makeMiddleware(setup.bind(this));\n};\nfunction multer(options) {\n  if (options === undefined) {\n    return new Multer({});\n  }\n  if (typeof options === 'object' && options !== null) {\n    return new Multer(options);\n  }\n  throw new TypeError('Expected object for argument options');\n}\nmodule.exports = multer;\nmodule.exports.diskStorage = diskStorage;\nmodule.exports.memoryStorage = memoryStorage;\nmodule.exports.MulterError = MulterError;","map":null,"metadata":{},"sourceType":"script"}