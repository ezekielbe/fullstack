{"ast":null,"code":"'use strict';\n\nconst {\n  parseContentType\n} = require('./utils.js');\nfunction getInstance(cfg) {\n  const headers = cfg.headers;\n  const conType = parseContentType(headers['content-type']);\n  if (!conType) throw new Error('Malformed content type');\n  for (const type of TYPES) {\n    const matched = type.detect(conType);\n    if (!matched) continue;\n    const instanceCfg = {\n      limits: cfg.limits,\n      headers,\n      conType,\n      highWaterMark: undefined,\n      fileHwm: undefined,\n      defCharset: undefined,\n      defParamCharset: undefined,\n      preservePath: false\n    };\n    if (cfg.highWaterMark) instanceCfg.highWaterMark = cfg.highWaterMark;\n    if (cfg.fileHwm) instanceCfg.fileHwm = cfg.fileHwm;\n    instanceCfg.defCharset = cfg.defCharset;\n    instanceCfg.defParamCharset = cfg.defParamCharset;\n    instanceCfg.preservePath = cfg.preservePath;\n    return new type(instanceCfg);\n  }\n  throw new Error(`Unsupported content type: ${headers['content-type']}`);\n}\n\n// Note: types are explicitly listed here for easier bundling\n// See: https://github.com/mscdex/busboy/issues/121\nconst TYPES = [require('./types/multipart'), require('./types/urlencoded')].filter(function (typemod) {\n  return typeof typemod.detect === 'function';\n});\nmodule.exports = cfg => {\n  if (typeof cfg !== 'object' || cfg === null) cfg = {};\n  if (typeof cfg.headers !== 'object' || cfg.headers === null || typeof cfg.headers['content-type'] !== 'string') {\n    throw new Error('Missing Content-Type');\n  }\n  return getInstance(cfg);\n};","map":null,"metadata":{},"sourceType":"script"}