{"ast":null,"code":"const express = require('express');\nconst multer = require('multer');\nconst Item = require('../models/Items');\nconst router = express.Router();\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, 'uploads/');\n  },\n  filename: function (req, file, cb) {\n    cb(null, Date.now() + '-' + file.originalname);\n  }\n});\nconst upload = multer({\n  storage: storage\n});\n\n// Create a new item\nrouter.post('/', upload.single('image'), async (req, res) => {\n  try {\n    const item = new Item({\n      title: req.body.title,\n      description: req.body.description,\n      image: req.file.path,\n      // Store the file path\n      category: req.body.category,\n      bids: []\n    });\n    const newItem = await item.save();\n    res.status(201).json(newItem);\n  } catch (error) {\n    res.status(400).json({\n      message: error.message\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","multer","Item","router","Router","storage","diskStorage","destination","req","file","cb","filename","Date","now","originalname","upload","post","single","res","item","title","body","description","image","path","category","bids","newItem","save","status","json","error","message","module","exports"],"sources":["/Users/benaiah/Desktop/silent-auction 2/silent-auction/silent-auction/src/components/UploadItem.js"],"sourcesContent":["const express = require('express');\nconst multer = require('multer');\nconst Item = require('../models/Items');\nconst router = express.Router();\n\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, 'uploads/');\n  },\n  filename: function (req, file, cb) {\n    cb(null, Date.now() + '-' + file.originalname);\n  }\n});\n\nconst upload = multer({ storage: storage });\n\n// Create a new item\nrouter.post('/', upload.single('image'), async (req, res) => {\n  try {\n    const item = new Item({\n      title: req.body.title,\n      description: req.body.description,\n      image: req.file.path,  // Store the file path\n      category: req.body.category,\n      bids: [],\n    });\n\n    const newItem = await item.save();\n    res.status(201).json(newItem);\n  } catch (error) {\n    res.status(400).json({ message: error.message });\n  }\n});\n\nmodule.exports = router;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,IAAI,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AACvC,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAM,CAAC,CAAC;AAE/B,MAAMC,OAAO,GAAGJ,MAAM,CAACK,WAAW,CAAC;EACjCC,WAAW,EAAE,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAE;IACpCA,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC;EACtB,CAAC;EACDC,QAAQ,EAAE,SAAAA,CAAUH,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAE;IACjCA,EAAE,CAAC,IAAI,EAAEE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGJ,IAAI,CAACK,YAAY,CAAC;EAChD;AACF,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGd,MAAM,CAAC;EAAEI,OAAO,EAAEA;AAAQ,CAAC,CAAC;;AAE3C;AACAF,MAAM,CAACa,IAAI,CAAC,GAAG,EAAED,MAAM,CAACE,MAAM,CAAC,OAAO,CAAC,EAAE,OAAOT,GAAG,EAAEU,GAAG,KAAK;EAC3D,IAAI;IACF,MAAMC,IAAI,GAAG,IAAIjB,IAAI,CAAC;MACpBkB,KAAK,EAAEZ,GAAG,CAACa,IAAI,CAACD,KAAK;MACrBE,WAAW,EAAEd,GAAG,CAACa,IAAI,CAACC,WAAW;MACjCC,KAAK,EAAEf,GAAG,CAACC,IAAI,CAACe,IAAI;MAAG;MACvBC,QAAQ,EAAEjB,GAAG,CAACa,IAAI,CAACI,QAAQ;MAC3BC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAG,MAAMR,IAAI,CAACS,IAAI,CAAC,CAAC;IACjCV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACH,OAAO,CAAC;EAC/B,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdb,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,OAAO,EAAED,KAAK,CAACC;IAAQ,CAAC,CAAC;EAClD;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG/B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}